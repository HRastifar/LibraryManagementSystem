/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hony.java;


import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Hony
 */
public class AddBook extends javax.swing.JFrame {

    /**
     * Creates new form AddingMembers
     */
    String bookId ;
    
   
    
    
    public AddBook() {
        initComponents();
        bookId = generateId();
        txtId.setText(bookId);
        
    }
    
    private void setId(String id){
       txtId.setText(id);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPublisher = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtEdition = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        datePublishDate = new com.toedter.calendar.JDateChooser();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        combCategory = new javax.swing.JComboBox();
        lblEdition = new javax.swing.JLabel();
        backgroundImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AddingBook");
        setMinimumSize(new java.awt.Dimension(400, 560));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Publisher");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("category");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Publish Date");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Edition");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Author");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Name");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Id");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, -1, -1));
        getContentPane().add(txtPublisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 180, 25));

        txtId.setEnabled(false);
        getContentPane().add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 180, 25));

        txtEdition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                checkInt(evt);
            }
        });
        getContentPane().add(txtEdition, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 180, 25));
        getContentPane().add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 180, 25));
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 180, 25));
        getContentPane().add(datePublishDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 180, 25));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 102, 102));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, 70, -1));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 102, 102));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, 80, -1));

        combCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Education", "Health", "Art", "Literature" }));
        getContentPane().add(combCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 180, 25));

        lblEdition.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblEdition.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(lblEdition, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, 90, 25));

        backgroundImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/hony/java/backgroundImg.jpg"))); // NOI18N
        getContentPane().add(backgroundImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        Home home = new Home();
       setVisible(false);
       home.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        if( checkEmpty() && checkEntry()){
           
           String sql = "insert into book (name,author,edition,category,id,publisher,publish_date)values(?,?,?,?,?,?,?)";
            
            try(Connection connection = Connector.connetorDB();
                    PreparedStatement pst = connection.prepareStatement(sql);)
            {
                pst.setString(1, txtName.getText());
                pst.setString(2, txtAuthor.getText());
                pst.setInt(3,Integer.parseInt(txtEdition.getText()));
                pst.setString(4,(String)combCategory.getSelectedItem());
                pst.setString(5,bookId);
                pst.setString(6, txtPublisher.getText());
                pst.setDate(7,getDate());
                if(pst.execute()){
                    JOptionPane.showOptionDialog(null, " The Book is not  added !","Failure",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
                }
                else{
                    int input = JOptionPane.showOptionDialog(null, " The Book added successfully !","Success",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
                    if(input == JOptionPane.OK_OPTION){
                        clear();
                    }
                }
                
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }else{
                    
            JOptionPane.showOptionDialog(null, " Please fill all the texts in the correct format","Failure",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
        }
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void checkInt(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkInt
      try{
           int i = Integer.parseInt(txtEdition.getText());
           lblEdition.setText("");
       }catch(NumberFormatException e){
           lblEdition.setText("only numbers");
       }
    }//GEN-LAST:event_checkInt

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundImg;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox combCategory;
    private com.toedter.calendar.JDateChooser datePublishDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblEdition;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtEdition;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPublisher;
    // End of variables declaration//GEN-END:variables

    private String generateId() {
        String randomId = randomeInt()+randomString();
        String sql = "select * from book where id = ?";
         try(Connection connection = Connector.connetorDB();
                PreparedStatement pst = connection.prepareStatement(sql);)
        {
            pst.setString(1, randomId);
            try(ResultSet rs = pst.executeQuery();){
                if(rs.next()){
                    generateId();
                }
             
        }}catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
                
        return randomId;
        
          
    }

    private Date getDate() {
     java.util.Date jDate = datePublishDate.getDate();
     java.sql.Date sqlDate = new java.sql.Date(jDate.getTime());
     return sqlDate;
    }

    private String randomeInt() {
       Random random= new Random();
       int number = 10 + random.nextInt(100);
       
       return Integer.toString(number);
    }

    private String randomString() {
        String sourceString = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" ;
        int size = 3;
        
         Random random= new Random();
        StringBuilder stringBuilder = new StringBuilder(size);
        while(stringBuilder.length()<size){
            int index = (int)(random.nextFloat()*sourceString .length());
            stringBuilder.append(sourceString .charAt(index));
        }
        return stringBuilder.toString();
        
   }

    

    private void clear() {
        txtAuthor.setText("");
        txtEdition.setText("");
        txtName.setText("");
        txtPublisher.setText("");
        datePublishDate.setDate(null);
        combCategory.setSelectedIndex(0);
        setId(generateId());
        
    }
    private boolean checkEmpty(){
        return txtName.getText()!= "" && txtAuthor.getText()!= "" && txtId.getText()!= "" && txtEdition.getText()!= ""&& txtId.getText()!= "" &&combCategory.getSelectedIndex()!= 0 &&datePublishDate.getDate()!= null;
    }

    private boolean checkEntry() {
        return "".equals(lblEdition.getText());
    }
    
    
   
}
