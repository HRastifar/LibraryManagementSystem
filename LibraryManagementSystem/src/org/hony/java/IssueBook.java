/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.hony.java;


import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Hony
 */
public class IssueBook extends javax.swing.JFrame {

    /**
     * Creates new form Issue Book
     */
    
    Connection connection;
    public IssueBook() {
        initComponents();
        connection = Connector.connetorDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMemberId = new javax.swing.JTextField();
        btnIssue = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtBookId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JDateBorrow = new com.toedter.calendar.JDateChooser();
        lblBackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Issue Book");
        setMinimumSize(new java.awt.Dimension(400, 560));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MemberID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));
        getContentPane().add(txtMemberId, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 180, 25));

        btnIssue.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnIssue.setForeground(new java.awt.Color(0, 153, 153));
        btnIssue.setText("Issue");
        btnIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueActionPerformed(evt);
            }
        });
        getContentPane().add(btnIssue, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 320, 70, 25));

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 153, 153));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 320, 70, 25));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Borrow Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));
        getContentPane().add(txtBookId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 180, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BookID");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
        getContentPane().add(JDateBorrow, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 180, 25));

        lblBackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/hony/java/backgroundImg.jpg"))); // NOI18N
        getContentPane().add(lblBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
         Home home = new Home();
       setVisible(false);
       home.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueActionPerformed
        
       // String name = getBookName();
        String sql = "insert into issue_book values(?,?,?,?)";
        if(checkForAvailability() ){     
        try(PreparedStatement pst = connection.prepareStatement(sql);){
            pst.setString(1, txtMemberId.getText());
            pst.setString(2, txtBookId.getText());
            pst.setDate(3,getDate());
            pst.setDate(4, returnDate());
          //  pst.setString(5, name);
            if(pst.execute()){
                JOptionPane.showOptionDialog(null, " Some thing went wrong !","Failure",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
            }else{
                int input = JOptionPane.showOptionDialog(null, " The Book Issued successfully !","Success",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
                if(input == JOptionPane.OK_OPTION){
                   clear();
                }
            }
            
            
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
        }
        }else{
            int input = JOptionPane.showOptionDialog(null, " The book is not available at the moment !","Failure",JOptionPane.OK_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE,null,null,null);
            if(input == JOptionPane.OK_OPTION){
                   clear();
            }
        }
        
    }//GEN-LAST:event_btnIssueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new IssueBook().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser JDateBorrow;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnIssue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblBackGround;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtMemberId;
    // End of variables declaration//GEN-END:variables

private Date getDate() {
     java.util.Date jDate = JDateBorrow.getDate();
     java.sql.Date sqlDate = new java.sql.Date(jDate.getTime());
     return sqlDate;
    }

private void clear() {
        txtBookId.setText("");
        txtMemberId.setText("");
        JDateBorrow.setDate(null);
        
        
    }

    private Date returnDate() {
        
        Calendar calender = Calendar.getInstance();
        calender.setTime(JDateBorrow.getDate());
        calender.add(Calendar.DATE,14);
        java.util.Date returnDate = calender.getTime();
        //java.sql.Date returnDateSql = new java.sql.Date(returnDate.getTime());
        return new java.sql.Date(returnDate.getTime());
    }

   

    private boolean checkForAvailability() {
        boolean result =false;
      String sql = "select * from issue_book where book_id = ?";
      try(PreparedStatement pst = connection.prepareStatement(sql);){
            pst.setString(1, txtBookId.getText());
              try(ResultSet rs = pst.executeQuery();){
                  result = !rs.next();
                    
                }
             
        }catch(Exception e){
             JOptionPane.showMessageDialog(null, e);
        }
      return result;
    }

    private boolean checkEmpty() {
       
          return txtMemberId.getText()!= "" && txtBookId.getText()!= ""
                  && JDateBorrow.getDate()!= null;
    
    }
}
